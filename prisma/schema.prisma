// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["selectRelationCount"]
}

model User {
  id               Int                @id @default(autoincrement())
  username         String
  email            String             @unique
  password         String
  phoneNumber      String
  profileImageUrl  String?
  introduction     String?
  createdAt        DateTime           @default(now())
  host             Host?
  languagesOnUsers LanguagesOnUsers[]
  review           Review[]
  reservation      Reservation[]
}

model Host {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  isSuper     Boolean  @default(false)
  isCertified Boolean  @default(false)
  description String?
  createdAt   DateTime @default(now())
  place       Place[]
}

model Language {
  id               Int                @id @default(autoincrement())
  name             String
  createdAt        DateTime           @default(now())
  languagesOnUsers LanguagesOnUsers[]
}

model LanguagesOnUsers {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  language   Language @relation(fields: [languageId], references: [id])
  languageId Int
  createdAt  DateTime @default(now())
}

model Place {
  id                Int           @id @default(autoincrement())
  title             String
  host              Host          @relation(fields: [hostId], references: [id])
  hostId            Int
  pricePerDay       Decimal
  description       String?
  rules             Json?
  conveniences      Json?
  beds              Json?
  locationLatitude  Decimal?
  locationLogitude  Decimal?
  placeImage        PlaceImage[]
  review            Review[]
  createdAt         DateTime      @default(now())
  reservation       Reservation[]
  placeType         PlaceType?    @relation(fields: [placeTypeId], references: [id])
  placeTypeId       Int?
  hostingType       HostingType?  @relation(fields: [hostingTypeId], references: [id])
  hostingTypeId     Int?
  isOnlyForGuest    Boolean?
  maximumGuests     Int?
  bathrooms         Int?
  availableCheckIn  DateTime?
  availableCheckout DateTime?
  basicFee          Decimal?
  minimumFee        Decimal?
  maximumFee        Decimal?
  currency          Currency      @relation(fields: [currencyId], references: [id])
  currencyId        Int
}

model Currency {
  id    Int     @id @default(autoincrement())
  name  String
  Place Place[]
}

model PlaceType {
  id                   Int                @id @default(autoincrement())
  name                 String
  description          String
  place                Place[]
  buildingDetailType   BuildingDetailType @relation(fields: [buildingDetailTypeId], references: [id])
  buildingDetailTypeId Int
}

model BuildingDetailType {
  id             Int          @id @default(autoincrement())
  name           String
  PlaceType      PlaceType[]
  buildingType   BuildingType @relation(fields: [buildingTypeId], references: [id])
  buildingTypeId Int
}

model BuildingType {
  id                 Int                  @id @default(autoincrement())
  name               String
  BuildingDetailType BuildingDetailType[]
}

model HostingType {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  Place       Place[]
}

model PlaceImage {
  id        Int      @id @default(autoincrement())
  place     Place    @relation(fields: [placeId], references: [id])
  placeId   Int
  imageUrl  String
  createdAt DateTime @default(now())
}

model Review {
  id        Int      @id @default(autoincrement())
  place     Place    @relation(fields: [placeId], references: [id])
  placeId   Int
  guest     User     @relation(fields: [guestId], references: [id])
  guestId   Int
  content   String
  createdAt DateTime @default(now())
}

model Reservation {
  id             Int      @id @default(autoincrement())
  place          Place    @relation(fields: [placeId], references: [id])
  placeId        Int
  guest          User     @relation(fields: [guestId], references: [id])
  guestId        Int
  numberOfGuests Int
  checkIn        DateTime
  checkOut       DateTime
  createdAt      DateTime @default(now())
}
